version: '3.8'

services:
  migrate:
    build:
      context: ./apps/server
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - db
    networks:
      - ${DOCKER_NETWORK:-app_network}
    command: ["bun", "run", "migrate:all"]
    restart: "no"

  app:
    build:
      context: ./apps/server
      dockerfile: Dockerfile
    restart: always
    ports:
      - "${APP_HOST_PORT:-3000}:${APP_CONTAINER_PORT:-3000}"
    env_file:
      - .env
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - DATABASE_URL=${DATABASE_URL}
      - ORIGIN=${ORIGIN}
      - BETTER_AUTH_URL=${BETTER_AUTH_URL}
      - BETTER_AUTH_SECRET=${BETTER_AUTH_SECRET}
      - AUTH_HOST=${AUTH_HOST}
      - AUTH_PORT=${AUTH_PORT}
      - GMAIL_USER=${GMAIL_USER}
      - GMAIL_PASS=${GMAIL_PASS}
      - EMAIL_FROM=${EMAIL_FROM}
      - EMAIL_SERVER=${EMAIL_SERVER}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - TEST_USERS=${TEST_USERS}
      - TEST_ORG=${TEST_ORG}
      - EMAIL_SERVICE_PROVIDER=${EMAIL_SERVICE_PROVIDER}
      - AZURE_COMMUNICATION_CONNECTION_STRING=${AZURE_COMMUNICATION_CONNECTION_STRING}
      - AZURE_COMMUNICATION_FROM_EMAIL=${AZURE_COMMUNICATION_FROM_EMAIL}
    depends_on:
      migrate:
        condition: service_completed_successfully
    networks:
      - ${DOCKER_NETWORK:-app_network}


  db:
    image: postgres:16-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "${DB_HOST_PORT:-5432}:${DB_CONTAINER_PORT:-5432}"
    networks:
      - ${DOCKER_NETWORK:-app_network}

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "${NGINX_HTTP_HOST_PORT:-80}:${NGINX_HTTP_CONTAINER_PORT:-80}"
      - "${NGINX_HTTPS_HOST_PORT:-443}:${NGINX_HTTPS_CONTAINER_PORT:-443}"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - app
    networks:
      - ${DOCKER_NETWORK:-app_network}

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  ${DOCKER_NETWORK:-app_network}:

volumes:
  postgres_data: