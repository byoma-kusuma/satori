# Database Configuration
DB_HOST=db
DB_PORT=5432
DB_NAME=satori
DB_USER=postgres
DB_PASS=your_secure_password
# SSL Mode: disable, allow, prefer, require, verify-ca, verify-full
DB_SSL_MODE=disable

# Database URL (used directly by application)
DATABASE_URL=postgresql://postgres:your_secure_password@db:5432/satori?sslmode=${DB_SSL_MODE}

# Application Configuration
NODE_ENV=development
PORT=3000

# Docker Port Configuration (Host:Container)
APP_HOST_PORT=3000
APP_CONTAINER_PORT=3000
DB_HOST_PORT=5432
DB_CONTAINER_PORT=5432
PGADMIN_HOST_PORT=5050
PGADMIN_CONTAINER_PORT=80

# Authentication Settings (Better Auth)
AUTH_HOST=your-api-domain.com
AUTH_PORT=3000
BETTER_AUTH_URL=https://your-api-domain.com
BETTER_AUTH_SECRET=your-random-secret-key-generate-a-secure-one

# Frontend Configuration
FRONTEND_HOST=localhost
FRONTEND_PORT=5173

# For development:
ORIGIN=http://localhost:5173
# For production:
# ORIGIN=https://your-frontend-domain.com



## Email Configuration
# For non-dev environments, use the following
# EMAIL_SERVICE_PROVIDER=azure

# For dev Environments, use the following
EMAIL_SERVICE_PROVIDER=gmail

# Azure Communication Services Configuration if using Azure
AZURE_COMMUNICATION_CONNECTION_STRING=your-azure-communication-connection-string
AZURE_COMMUNICATION_FROM_EMAIL=no-reply@your-domain.com

EMAIL_FROM=no-reply@your-domain.com
EMAIL_SERVER=smtp.your-mail-provider.com
EMAIL_PORT=587
EMAIL_USER=your-email-username
EMAIL_PASSWORD=your-email-password

# Gmail Configuration (if using Gmail)
GMAIL_USER=your-gmail@gmail.com
GMAIL_PASS=your-gmail-app-password

# Test Users
TEST_USERS=test@test.com, test2@test.com, test3@test.com
TEST_ORG=test.org

# Docker Network Configuration
DOCKER_NETWORK=satori-app-network

# Available npm scripts:
# npm run dev              - Development server with hot reload
# npm run migrate:dev      - Full development migration (dbmate + auth + codegen)  
# npm run migrate:prod     - Production migration (dbmate + auth, no codegen)
# npm run seed             - Seed database with test data

# Docker Compose Files:
# docker-compose.dev.yml   - Development environment (with pgAdmin, hot reload)
# docker-compose.prod.yml  - Production environment (optimized for deployment)

# ðŸ“š See docs/ folder for detailed documentation:
# docs/DOCKER_COMPOSE_GUIDE.md - Complete Docker setup guide
# docs/SSL_MODE_OPTIONS.md     - Database security configuration