version: '3.8'

services:
  migrate:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - db
    networks:
      - app_network
    volumes:
      - .:/app
      - /app/node_modules
    command: ["bun", "run", "migrate:all"]
    restart: "no"

  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "${APP_HOST_PORT:-3000}:${APP_CONTAINER_PORT:-3000}"
    env_file:
      - .env
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - DATABASE_URL=${DATABASE_URL}
      - ORIGIN=${ORIGIN}
      - BETTER_AUTH_URL=${BETTER_AUTH_URL}
      - BETTER_AUTH_SECRET=${BETTER_AUTH_SECRET}
      - AUTH_HOST=${AUTH_HOST}
      - AUTH_PORT=${AUTH_PORT}
      - GMAIL_USER=${GMAIL_USER}
      - GMAIL_PASS=${GMAIL_PASS}
      - EMAIL_FROM=${EMAIL_FROM}
      - EMAIL_SERVER=${EMAIL_SERVER}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
    depends_on:
      migrate:
        condition: service_completed_successfully
    networks:
      - app_network
    volumes:
      - .:/app
      - /app/node_modules
    command: ["bun", "run", "dev"]

  db:
    image: postgres:16-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "${DB_HOST_PORT:-5432}:${DB_CONTAINER_PORT:-5432}"
    networks:
      - app_network

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "${PGADMIN_HOST_PORT:-5050}:${PGADMIN_CONTAINER_PORT:-80}"
    depends_on:
      - db
    networks:
      - app_network

networks:
  app_network:

volumes:
  postgres_data: